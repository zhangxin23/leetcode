cmake_minimum_required(VERSION 3.3)
project(leetcode)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

set(SOURCE_FILES
    linear-list/array/binary_search.cpp
    linear-list/array/candy.cpp
    linear-list/array/climbing_stairs.cpp
    linear-list/array/four_sum.cpp
    linear-list/array/gas_station.cpp
    linear-list/array/gray_code.cpp
    linear-list/array/longest_consecutive_sequence.cpp
    linear-list/array/median_of_two_sorted_arrays.cpp
    linear-list/array/next_permutation.cpp
    linear-list/array/permulation_sequence.cpp
    linear-list/array/plus_one.cpp
    linear-list/array/remove_duplicates_from_sorted_array.cpp
    linear-list/array/remove_duplicates_from_sorted_array_II.cpp
    linear-list/array/remove_element.cpp
    linear-list/array/rotate_image.cpp
    linear-list/array/search_in_rotated_sorted_array.cpp
    linear-list/array/search_rotated_sorted_array_II.cpp
    linear-list/array/set_matrix_zeroes.cpp
    linear-list/array/single_number.cpp
    linear-list/array/single_number_II.cpp
    linear-list/array/str_to_int.cpp
    linear-list/array/three_sum.cpp
    linear-list/array/three_sum_closest.cpp
    linear-list/array/trapping_rain_water.cpp
    linear-list/array/two_sum.cpp
    linear-list/array/valid_sudoku.cpp
    linear-list/list/add_two_numbers.cpp
    linear-list/list/copy_list_with_random_pointer.cpp
    linear-list/list/linked_list_cycle.cpp
    linear-list/list/linked_list_cycle_II.cpp
    linear-list/list/lru_cache.cpp
    linear-list/list/partition_list.cpp
    linear-list/list/remove_duplicated_from_sorted_list_II.cpp
    linear-list/list/remove_duplicates_from_sorted_list.cpp
    linear-list/list/remove_nth_node_from_end_of_list.cpp
    linear-list/list/reorder_list.cpp
    linear-list/list/reverse_linked_list_II.cpp
    linear-list/list/reverse_nodes_in_k_group.cpp
    linear-list/list/rotate_list.cpp
    linear-list/list/swap_nodes_in_pairs.cpp
    stack/longest_valid_parentheses.cpp
    stack/valid_parentheses.cpp
    string/add_binary.cpp
    string/anagrams.cpp
    string/atoi.cpp
    string/integer_to_roman.cpp
    string/length_of_last_word.cpp
    string/longest_common_prefix.cpp
    string/longest_palindromic_substring.cpp
    string/regular_expression_matching.cpp
    string/roman_to_integer.cpp
    string/simplify_path.cpp
    string/strStr.cpp
    string/valid_number.cpp
    string/valid_palindrome.cpp
    string/wildcard_matching.cpp
    temp/basic-calculator/basic_calculator.cpp
    temp/find-missing-positive/find_missing_positive.c
    temp/sort-colors/sorted_colors.c
    temp/summary-ranges/summary_ranges.c
    temp/summary-ranges/summary_ranges_fast.c
    stack/largest_rectangle_in_histogram.cpp
    stack/evaluate_reverse_polish_notation.cpp
    binary-tree/binary_tree_preorder_traversal.cpp
    binary-tree/tree.h
    binary-tree/binary_tree_inorder_traversal.cpp
    binary-tree/binary_tree_postorder_traversal.cpp
    binary-tree/binary_tree_level_order_traversal.cpp
    binary-tree/binary_tree_level_order_traversal_II.cpp
    binary-tree/binary_tree_zigzag_level_order_traversal.cpp
    binary-tree/recover_binary_search_tree.cpp
    binary-tree/same_tree.cpp
    binary-tree/symmetric_tree.cpp
    binary-tree/balanced_binary_tree.cpp
    binary-tree/flatten_binary_tree_to_linked_list.cpp
    binary-tree/populating_next_right_pointers_in_each_node_II.cpp
    binary-tree/construct_binary_tree_from_preorder_and_inorder_traversal.cpp
    binary-tree/construct_binary_tree_from_inorder_and_postorder_traversal.cpp
    binary-tree/convert_sorted_array_to_binary_search_tree.cpp
    binary-tree/convert_sorted_list_to_binary_search_tree.cpp
    binary-tree/unique_binary_search_trees.cpp
    binary-tree/unique_binary_search_trees_II.cpp
    binary-tree/validate_binary_search_tree.cpp
    binary-tree/minimum_depth_of_binary_tree.cpp
    binary-tree/maximum_depth_of_binary_tree.cpp
    binary-tree/path_sum.cpp binary-tree/path_sum_II.cpp binary-tree/binary_tree_maximum_path_sum.cpp binary-tree/sum_root_to_leaf_numbers.cpp "binary-tree/populating_next_right_pointers _in_each_node.cpp" sort/merge_sorted_array.cpp sort/merge_two_sorted_lists.cpp sort/merge_k_sorted_lists.cpp sort/insertion_sort_list.cpp sort/sort_list.cpp sort/first_missing_positive.cpp sort/sort_colors.cpp search/search_for_a_range.cpp search/search_insert_position.cpp search/search_a_2D_matrix.cpp force-enum/subsets.cpp force-enum/subsets_II.cpp force-enum/permutations.cpp force-enum/permutations_II.cpp force-enum/combinations.cpp force-enum/letter_combinations_of_a_phone_number.cpp breadth-first-search/word_ladder.cpp breadth-first-search/word_ladder_II.cpp breadth-first-search/surrounded_regions.cpp depth-first-search/palindrome_partitioning.cpp)

add_executable(leetcode ${SOURCE_FILES})